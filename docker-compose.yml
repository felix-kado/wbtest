version: '3.8'
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      # - ./internal/db/init/:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U felix -d wbstore -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5


  nats:
    image: nats:latest
    command: -js
    ports:
      - ${NATS_PORTS}
      - "8222:8222"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8222/healthz"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_HOST: ${POSTGRES_HOST}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      NATS_URL: ${NATS_URL}
      SERVER_PORT: ${SERVER_PORT}
    depends_on:
      - migrator
      
      # nats:
      #   condition: service_healthy
    ports:
      - "8080:8080"

  test_publisher:
    build:
      context: .
      dockerfile: Dockerfile.publisher
    environment:
      NATS_URL: ${NATS_URL}
    depends_on:
      # nats:
      #   condition: service_healthy
      migrator:
        condition: service_started
      
  migrator:
      image: migrate/migrate
      volumes:
        - ./internal/db/migrations:/migrations
      depends_on:
        postgres:
          condition: service_healthy
      environment:
        DATABASE_URL: ${DATABASE_URL}
      command:
        - "-path=/migrations"
        - "-database=${DATABASE_URL}"
        - "up"
      restart: on-failure
volumes:
  pgdata:
